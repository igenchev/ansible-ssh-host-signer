---
- name: Find SSH host keys.
  find:
    path: "{{ ssh_host_signer_key_directory }}"
    pattern: ssh_host_*_key
  register: private_keys
  failed_when: "\"matched\" not in private_keys or private_keys.matched == 0"
  become: true

- name: Create local temporary directory.
  local_action:
    module: tempfile
    suffix: ansible-ssh-host-signer
    state: directory
  changed_when: false
  register: temporary_directory

- name: Fetch public keys.
  fetch:
    src: "{{ item.path }}.pub"
    dest: "{{ temporary_directory.path }}/public_keys/"
  with_items: "{{ private_keys.files }}"
  changed_when: false

- name: Fetch existing certificates.
  fetch:
    src: "{{ item.path }}-cert.pub"
    dest: "{{ temporary_directory.path }}/existing_certificates/"
    fail_on_missing: false
  with_items: "{{ private_keys.files }}"
  changed_when: false

- name: Get next Sign Number
  local_action: command cat {{ ssh_host_signer_ca_counter }}
  register: next_number
  become: true

- name: Sign SSH keys.
  local_action: command ssh-keygen -s "{{ ssh_host_signer_ca_key | quote }}" -I {{ ssh_host_signer_id | quote }} -h -n {{ ssh_host_signer_hostnames | quote }} "{{ temporary_directory.path }}/public_keys/{{ inventory_hostname | quote }}{{ item.path | quote }}.pub -z {{ next_number }}"
  with_items: "{{ private_keys.files }}"
  changed_when: false

- name: Update Sign Number
  local_action: command echo {{ next_number + 1 }} \>{{ ssh_host_signer_ca_counter }}
  become: true

- name: Find certificates.
  local_action:
    module: find
    path: "{{ temporary_directory.path }}/public_keys/{{ inventory_hostname }}{{ ssh_host_signer_key_directory }}"
    pattern: ssh_host_*_key-cert.pub
  register: certificates

- name: Compare certificates.
  local_action: shell diff <(ssh-keygen -L -f {{ item.path | quote }} | tail -n +2) <(ssh-keygen -L -f {{ temporary_directory.path | quote }}/existing_certificates/{{ inventory_hostname | quote }}{{ ssh_host_signer_key_directory }}/{{ item.path | basename | quote }} | tail -n +2)
  args:
    executable: /bin/bash
  with_items: "{{ certificates.files }}"
  changed_when: false
  failed_when: false
  register: certificate_comparison

- name: Copy certificates back to server.
  copy:
    src: "{{ item.item.path }}"
    dest: "{{ ssh_host_signer_key_directory }}"
  when: item.rc != 0
  with_items: "{{ certificate_comparison.results }}"
  notify: Reload SSH configuration.
  become: true

- name: Remove local temporary directory.
  local_action:
    module: file
    name: "{{ temporary_directory.path }}"
    state: absent
  changed_when: false

- name: Add certificates to SSH configuration file.
  lineinfile:
    dest: "{{ ssh_host_signer_ssh_config }}"
    line: HostCertificate {{ item.path }}-cert.pub
    state: present
    insertafter: HostKey {{ item.path }}
  with_items: "{{ private_keys.files }}"
  notify: Reload SSH configuration.
  become: true
